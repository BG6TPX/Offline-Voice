C51 COMPILER V9.00   MAIN                                                                  09/06/2014 11:43:39 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\obj\main.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\code\main.c BROWSE INCDIR(..\code;..\user) DEBUG OBJECTEXTEND PRINT(.\ma
                    -in.lst) OBJECT(..\obj\main.obj)

line level    source

   1          /***************************飞音云电子****************************
   2          **  工程名称：YS-LDV3语音识别开发板驱动程序
   3          **      CPU: STC11L08XE
   4          **      晶振：22.1184MHZ
   5          **      波特率：9600 bit/S
   6          **      配套产品信息：YS-LDV3语音识别开发板
   7          **                http://yuesheng001.taobao.com
   8          **  作者：zdings
   9          **  联系：751956552@qq.com
  10          **  修改日期：2014.08.16
  11          **  说明：口令模式： 即每次识别时都需要说“小石头”这个口令 ，才能够进行下一级的识别
  12          /***************************飞音云电子******************************/
  13          #include "config.h"
  14          /************************************************************************************/
  15          //      nAsrStatus 用来在main主程序中表示程序运行的状态，不是LD3320芯片内部的状态寄存器
  16          //      LD_ASR_NONE:            表示没有在作ASR识别
  17          //      LD_ASR_RUNING：         表示LD3320正在作ASR识别中
  18          //      LD_ASR_FOUNDOK:         表示一次识别流程结束后，有一个识别结果
  19          //      LD_ASR_FOUNDZERO:       表示一次识别流程结束后，没有识别结果
  20          //      LD_ASR_ERROR:           表示一次识别流程中LD3320芯片内部出现不正确的状态
  21          /***********************************************************************************/
  22          uint8 idata nAsrStatus=0;       
  23          void MCU_init(); 
  24          void ProcessInt0(); //识别处理函数
  25          void delay(unsigned long uldata);
  26          void User_handle(uint8 dat);//用户执行操作函数
  27          void Delay200ms();
  28          void Led_test(void);//单片机工作指示
  29          void Led_test1(void);
  30          uint8_t G0_flag=DISABLE;//运行标志，ENABLE:运行。DISABLE:禁止运行 
  31          
  32          sbit LED1=P4^0;//信号指示灯1
  33          sbit LED2=P2^2;//信号指示灯2
  34          sbit LED3=P4^1;//信号指示灯3
  35          
  36          sbit key1=P4^2;//按键1
  37          sbit key2=P4^3;//按键2
  38          sbit key3=P3^4;//按键3
  39          
  40          //定义P1端口
  41          sbit CH0=P1^0;
  42          sbit CH1=P1^1;
  43          sbit CH2=P1^2;
  44          sbit CH3=P1^3;
  45          sbit CH4=P1^4;
  46          sbit CH5=P1^5;
  47          sbit CH6=P1^6;
  48          sbit CH7=P1^7;
  49          /***********************************************************
  50          * 名    称： void  main(void)
  51          * 功    能： 主函数     程序入口
  52          * 入口参数：  
  53          * 出口参数：
  54          * 说    明：                                     
C51 COMPILER V9.00   MAIN                                                                  09/06/2014 11:43:39 PAGE 2   

  55          * 调用方法： 
  56          **********************************************************/ 
  57          void  main(void)
  58          {
  59   1              uint8 idata nAsrRes;
  60   1              uint8 i=0;
  61   1              MCU_init();
  62   1              Led_test();
  63   1              LD_Reset(); //语音芯片复位
  64   1              UartIni(); /*串口初始化*/
  65   1              nAsrStatus = LD_ASR_NONE;               //      初始状态：没有在作ASR
  66   1              
  67   1              #ifdef TEST     
  68   1          PrintCom("一级口令：小石头\r\n"); /*text.....*/
  69   1              PrintCom("二级口令：1、代码测试\r\n"); /*text.....*/
  70   1              PrintCom("      2、开发板验证\r\n"); /*text.....*/
  71   1              PrintCom("      3、开灯\r\n"); /*text.....*/
  72   1              PrintCom("      4、关灯\r\n"); /*text.....*/
  73   1              PrintCom("  5、北京\r\n"); /*text.....*/
  74   1              PrintCom("      6、上海\r\n"); /*text.....*/
  75   1              PrintCom("      7、广州\r\n"); /*text.....*/
  76   1              #endif
  77   1      
  78   1              while(1)
  79   1              {
  80   2                      switch(nAsrStatus)
  81   2                      {
  82   3                              case LD_ASR_RUNING:
  83   3                              case LD_ASR_ERROR:              
  84   3                                      break;
  85   3                              case LD_ASR_NONE:
  86   3                              {
  87   4                                      nAsrStatus=LD_ASR_RUNING;
  88   4                                      if (RunASR()==0)        /*      启动一次ASR识别流程：ASR初始化，ASR添加关键词语，启动ASR运算*/
  89   4                                      {
  90   5                                              nAsrStatus = LD_ASR_ERROR;
  91   5                                      }
  92   4                                      break;
  93   4                              }
  94   3                              case LD_ASR_FOUNDOK: /* 一次ASR识别流程结束，去取ASR识别结果*/
  95   3                              {                               
  96   4                                      nAsrRes = LD_GetResult();               /*获取结果*/
  97   4                                      User_handle(nAsrRes);//用户执行函数 
  98   4                                      nAsrStatus = LD_ASR_NONE;
  99   4                                      break;
 100   4                              }
 101   3                              case LD_ASR_FOUNDZERO:
 102   3                              default:
 103   3                              {
 104   4                                      nAsrStatus = LD_ASR_NONE;
 105   4                                      break;
 106   4                              }
 107   3                      }// switch                              
 108   2                      
 109   2                      //按键功能演示测试。。。。。。用于测试按键是否正常
 110   2                      if(key1==0 || key2==0 || key3==0)
 111   2                      {
 112   3                         Led_test1();
 113   3                      }
 114   2              }// while
 115   1      
 116   1      }
C51 COMPILER V9.00   MAIN                                                                  09/06/2014 11:43:39 PAGE 3   

 117          /***********************************************************
 118          * 名    称：     LED灯测试
 119          * 功    能： 单片机是否工作指示
 120          * 入口参数： 无 
 121          * 出口参数：无
 122          * 说    明：                                     
 123          **********************************************************/
 124          void Led_test(void)
 125          {
 126   1              Delay200ms();Delay200ms();
 127   1              LED1=0;LED2=0;LED3=0;
 128   1              Delay200ms();Delay200ms();
 129   1              LED1=1;LED2=1;LED3=1;
 130   1              Delay200ms();Delay200ms();
 131   1              LED1=0;LED2=0;LED3=0;
 132   1              Delay200ms();Delay200ms();
 133   1              LED1=1;LED2=1;LED3=1;
 134   1              Delay200ms();Delay200ms();
 135   1              LED1=0;LED2=0;LED3=0;
 136   1      }
 137          // 用于指示是否识别成功
 138          void Led_test1(void)
 139          {
 140   1              LED1=1;LED2=0;LED3=0;
 141   1              Delay200ms();
 142   1              LED1=0;LED2=1;LED3=0;
 143   1              Delay200ms();
 144   1              LED1=0;LED2=0;LED3=1;
 145   1              Delay200ms();
 146   1              LED1=0;LED2=0;LED3=0;
 147   1      }
 148          
 149          
 150          /***********************************************************
 151          * 名    称： void MCU_init()
 152          * 功    能： 单片机初始化
 153          * 入口参数：  
 154          * 出口参数：
 155          * 说    明：                                     
 156          * 调用方法： 
 157          **********************************************************/ 
 158          void MCU_init()
 159          {
 160   1              P0 = 0xff;
 161   1              
 162   1              P2 = 0xff;
 163   1              P3 = 0xff;
 164   1              P4 = 0xff;
 165   1              
 166   1              P1M1=0X00;P1M0=0XFF;//设置P1端口为推完输出，提高IO口电流。//设置方法参考单片机数据手册第67页。
 167   1              P1 = 0x00;//使P1默认为低电平。
 168   1      
 169   1              IE0=1;
 170   1              EX0=1;
 171   1              EA=1;
 172   1      }
 173          /***********************************************************
 174          * 名    称：    延时函数
 175          * 功    能：
 176          * 入口参数：  
 177          * 出口参数：
 178          * 说    明：                                     
C51 COMPILER V9.00   MAIN                                                                  09/06/2014 11:43:39 PAGE 4   

 179          * 调用方法： 
 180          **********************************************************/ 
 181          void Delay200us()               //@22.1184MHz
 182          {
 183   1              unsigned char i, j;
 184   1              _nop_();
 185   1              _nop_();
 186   1              i = 5;
 187   1              j = 73;
 188   1              do
 189   1              {
 190   2                      while (--j);
 191   2              } while (--i);
 192   1      }
 193          
 194          void  delay(unsigned long uldata)
 195          {
 196   1              unsigned int j  =  0;
 197   1              unsigned int g  =  0;
 198   1              while(uldata--)
 199   1              Delay200us();
 200   1      }
 201          
 202          void Delay200ms()               //@22.1184MHz
 203          {
 204   1              unsigned char i, j, k;
 205   1      
 206   1              i = 17;
 207   1              j = 208;
 208   1              k = 27;
 209   1              do
 210   1              {
 211   2                      do
 212   2                      {
 213   3                              while (--k);
 214   3                      } while (--j);
 215   2              } while (--i);
 216   1      }
 217          
 218          /***********************************************************
 219          * 名    称： 中断处理函数
 220          * 功    能：
 221          * 入口参数：  
 222          * 出口参数：
 223          * 说    明：                                     
 224          * 调用方法： 
 225          **********************************************************/ 
 226          void ExtInt0Handler(void) interrupt 0  
 227          {       
 228   1              ProcessInt0();                          
 229   1      }
 230          /***********************************************************
 231          * 名    称：用户执行函数 
 232          * 功    能：识别成功后，执行动作可在此进行修改 
 233          * 入口参数： 无 
 234          * 出口参数：无
 235          * 说    明：                                     
 236          **********************************************************/
 237          void    User_handle(uint8 dat)
 238          {
 239   1           //UARTSendByte(dat);//串口识别码（十六进制）
 240   1                       if(0==dat)
C51 COMPILER V9.00   MAIN                                                                  09/06/2014 11:43:39 PAGE 5   

 241   1                       {
 242   2                              G0_flag=ENABLE;
 243   2                              LED1=1;LED2=1;LED3=1;    //指示灯全部点亮，提示口令识别成功
 244   2                              PrintCom("收到\r\n"); /*text.....*/
 245   2                       }
 246   1                       else if(ENABLE==G0_flag)
 247   1                       {      
 248   2                                      G0_flag=DISABLE;
 249   2                               switch(dat)               /*对结果执行相关操作,客户可删除Printcom 串口输出语句替换为其他需要控制的代码*/
 250   2                                {
 251   3                                        case CODE_DMCS:                       /*命令“测试”*/
 252   3                                                      PrintCom("“代码测试”命令识别成功\r\n"); /*text.....*/
 253   3                                                      CH0=1;//使P1.0端口输出高电平
 254   3                                                      Led_test1();//指示灯提示识别完成
 255   3                                                                                                               break;
 256   3                                              case CODE_KFBYZ:         /*命令“全开”*/
 257   3                                                      PrintCom("“开发板验证”命令识别成功\r\n"); /*text.....*/
 258   3                                                      CH1=1;//使P1.1端口输出高电平
 259   3                                                      Led_test1();//指示灯提示识别完成
 260   3                                                                                                               break;
 261   3                                              case CODE_KD:           /*命令“复位”*/                                
 262   3                                                      PrintCom("“开灯”命令识别成功\r\n"); /*text.....*/
 263   3                                                      CH2=1;//使P1.2端口输出高电平
 264   3                                                      Led_test1();//指示灯提示识别完成
 265   3                                                                                                              break;
 266   3                                              case CODE_GD:           /*命令“复位”*/                                
 267   3                                                      CH2=0;//使P1.2端口输出低电平
 268   3                                                      PrintCom("“关灯”命令识别成功\r\n"); /*text.....*/
 269   3                                                      Led_test1();//指示灯提示识别完成
 270   3                                                                                                              break;
 271   3                                              case CODE_BJ:           /*命令“复位”*/                                                                                
 272   3                                                      PrintCom("“北京”命令识别成功\r\n"); /*text.....*/
 273   3                                                      CH3=1;//使P1.3端口输出高电平
 274   3                                                      Led_test1();//指示灯提示识别完成
 275   3                                                                                                              break;
 276   3                                              case CODE_SH:           /*命令“复位”*/                                
 277   3                                                      PrintCom("“上海”命令识别成功\r\n"); /*text.....*/
 278   3                                                      CH4=1;//使P1.4端口输出高电平
 279   3                                                      Led_test1();//指示灯提示识别完成
 280   3                                                                                                              break;
 281   3                                              case CODE_GZ:           /*命令“复位”*/                                
 282   3                                                      PrintCom("“广州”命令识别成功\r\n"); /*text.....*/
 283   3                                                      CH5=1;//使P1.5端口输出高电平
 284   3                                                      Led_test1();//指示灯提示识别完成
 285   3                                                                                                              break;                                                                                                                                                                                                                  
 286   3                                                      default:PrintCom("请重新识别发口令\r\n"); /*text.....*/break;
 287   3                                      }       
 288   2                              }       
 289   1                              else    
 290   1                              {
 291   2                                      PrintCom("请说出一级口令\r\n"); /*text.....*/   
 292   2                              }
 293   1      }        


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    559    ----
   CONSTANT SIZE    =    330    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      10
   IDATA SIZE       =      1       1
C51 COMPILER V9.00   MAIN                                                                  09/06/2014 11:43:39 PAGE 6   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
